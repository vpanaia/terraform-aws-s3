name: Deploy Localstack + Terraform + Amazon S3

on:
  push:
    branches:
      - "master"

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: s3-web

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./s3-web
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          labels: ${{ steps.meta.output.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    env:
      OWNER: ${{ github.repository_owner }}
      REPO:  ${{ github.event.repository.name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install docker-compose-plugin
        run: sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.6/docker-compose-linux-x86_64" \
              -o /usr/local/bin/docker-compose
             sudo chmod -x /usr/local/bin/docker-compose

      - name: Ensure Docker Compose v2
        run: docker compose version || sudo apt-get update && sudo apt-get install -y docker-compose-plugin

      - name: Start LocalStack first
        run: |
          OWNER=${{ env.OWNER }} REPO=${{ env.REPO }} docker compose -f docker-compose.prod.yml up -d localstack
          for i in {1..20}; do
            nc -z 127.0.0.1 4566 && echo "LocalStack up" && break
            echo "Waiting LocalStack... ($i)"
            sleep 2
          done

      - name: Terraform Init/Apply (against LocalStack)
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: test
          AWS_SECRET_ACCESS_KEY: test
          AWS_DEFAULT_REGION: us-east-1
        run: |
          terraform init -input=false -upgrade
          terraform plan -out=tfplan -input=false
          terraform apply -input=false -auto-approve tfplan

      - name: Generate .env for s3-web from Terraform outputs
        working-directory: ./terraform
        run: |
          BUCKET=$(terraform output -raw bucket_name 2>/dev/null || echo "")
          cat > ../.env <<EOF
          PORT=3000
          BUCKET_NAME=${BUCKET}
          S3_ENDPOINT=http://localhost:4566
          AWS_REGION=us-east-1
          AWS_ACCESS_KEY_ID=test
          AWS_SECRET_ACCESS_KEY=test
          FORCE_PATH_STYLE=true
          TERRAFORM_DIR=$(pwd)
          EOF
          echo "Generated .env with BUCKET_NAME=${BUCKET}"
      - name: Pull and start s3-web
        env:
          OWNER: ${{ env.OWNER }}
          REPO:  ${{ env.REPO }}
        run: |
          OWNER=${OWNER} REPO=${REPO} docker compose -f docker-compose.prod.yml pull s3-web
          OWNER=${OWNER} REPO=${REPO} docker compose -f docker-compose.prod.yml up -d s3-web

      - name: Show running containers
        run: docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Ports}}"